// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('test1', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').usingServer('http://localhost:4444/wd/hub').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('test1', async function() {
    // Test name: test1
    // Step # | name | target | value
    // 1 | open | target | https://the-internet.herokuapp.com/dynamic_controls
    // open base url
    await driver.get("https://the-internet.herokuapp.com/dynamic_controlstarget")
    // 2 | storeTitle | target | The Internet
    // check title
    vars["The Internet"] = await driver.getTitle()
    // 3 | click | css=#checkbox > input | 
    // click checkbox
    await driver.findElement(By.css("#checkbox > input")).click()
    // 4 | click | css=#input-example > button | 
    // click Unable button
    await driver.findElement(By.css("#input-example > button")).click()
    // 5 | waitForElementEditable | css=#input-example > input | 3000
    // wait for input can be added
    await driver.wait(until.elementIsEnabled(await driver.findElement(By.css("#input-example > input"))), 3000)
    // 6 | waitForElementPresent | css=#input-example > button | Disable
    // check Unable change to Disable
    await driver.wait(until.elementLocated(By.css("#input-example > button")), NaN)
    // 7 | type | css=#input-example > input | test
    // input test text
    await driver.findElement(By.css("#input-example > input")).sendKeys("test")
    // 8 | click | xpath=//*[@id="checkbox-example"]/button | 
    // click on Remove
    await driver.findElement(By.xpath("//*[@id=\"checkbox-example\"]/button")).click()
    // 9 | waitForElementPresent | id=message | It's gone!
    // wait until the button be removed
    await driver.wait(until.elementLocated(By.id("message")), NaN)
  })
})
